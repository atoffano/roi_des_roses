import pytest
rr = pytest.importorskip("roi_des_roses")

plateau = ['.', '.', '.', '.', '.', 'B', 'B', '.', '.'], ['.', '.', '.', '.', 'R', 'R', 'B', '.', '.'], ['.', 'R', '.', '.', 'B', 'B', 'R', 'B', '.'], ['.', '.', '.', '.', '.', '.', '.', 'B', '.'], ['.', '.', '.', '.', 'R', '.', 'R', '.', 'B'], ['.', '.', '.', '.', 'R', '.', 'B', 'R', 'B'], ['.', '.', '.', '.', '.', '.', '.', 'B', 'R'], ['.', '.', '.', '.', '.', 'R', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', 'R', 'B']
l_roi = 3
c_roi = 2
main_r = ["S1","SO1","O1"]
main_b =["SE1","NE2","N3","E2"]

def afficher_jeu(plateau, l_roi, c_roi, main_r, main_b):
    print("Rouge : S1 SO1 O1")
    print("Blanc : SE1 NE2 N3 E2")
    for i in range(len(plateau)):
        print("-" * 6 + "-" * 5 *(len(plateau)-1))
        for j in range(len(plateau)) :
            car = ""
            if l_roi == i and c_roi == j:
                car = "X"
            else:
                car = " "
            if plateau[i][j] == "B" :
                car = car + "B"
            elif plateau[i][j] == "R" :
                car = car + "R"
            else:
                car = car + " "
            print(f"| {car} ",end="")
        print ("|")
    print("-" * 6 + "-" * 5 *(len(plateau)-1))

a = "Rouge : S1 SO1 O1"
b = "Blanc : SE1 NE2 N3 E2"
c = "Rouge : S1 SO1 O1Blanc : SE1 NE2 N3 E2"
j ="e"
k = "e"
def test_test():
    print(a)
    print(b)
    print(c)
    assert j == k
print("Rouge : S1 SO1 O1Blanc : SE1 NE2 N3 E2----------------------------------------------|    |    |    |    |    |  B |  B |    |    |----------------------------------------------|    |    |    |    |  R |  R |  B |    |    |----------------------------------------------|    |  R |    |    |  B |  B |  R |  B |    |----------------------------------------------|    |    | X  |    |    |    |    |  B |    |----------------------------------------------|    |    |    |    |  R |    |  R |    |  B |----------------------------------------------|    |    |    |    |  R |    |  B |  R |  B |----------------------------------------------|    |    |    |    |    |    |    |  B |  R |----------------------------------------------|    |    |    |    |    |  R |    |    |    |----------------------------------------------|    |    |    |    |    |    |    |  R |  B |----------------------------------------------")